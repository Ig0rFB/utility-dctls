-- Resolve Studio's Frame averaging doesn't seem to work for me.
FuRegisterClass("FrameAvg",
    CT_Tool, {
        REGS_Name = "Frame Averager",
        REGS_Category = "Fuses\\Util",
        REGS_OpIconString = "FrAvg",
        REGS_OpDescription = "Averages the following several frames together."
    }
)

function Create()
    NumFrames = self:AddInput("Number of Frames", "FramesNum", {
        LINKID_DataType = "Number",
        INPID_InputControl = "SliderControl",
        INP_MinScale = 1.0,
        INP_MaxScale = 10.0,
        INP_Default = 1.0,
        INP_INTEGER = true,
        INP_MinAllowed = 1.0,
        IC_DisplayedPrecision = 0,
    })
    Modulus = self:AddInput("Frame Hold", "FrameHold", {
        LINKID_DataType = "Number",
        INPID_InputControl = "SliderControl",
        INP_MinScale = 1.0,
        INP_MaxScale = 10.0,
        INP_Default = 1.0,
        INP_INTEGER = true,
        INP_MinAllowed = 1.0,
        IC_DisplayedPrecision = 0,
    })
    InImage = self:AddInput("Input", "Input", {
        LINKID_DataType = "Image",
        LINK_Main = 1,
    })
    OutImage = self:AddOutput("Output", "Output", {
        LINKID_DataType = "Image",
        LINK_Main = 1,
    })
end

function Process(req)
    -- Get values from the UI Tools
    local num_frames = NumFrames:GetValue(req).Value
    local mod_frames = Modulus:GetValue(req).Value
    local img = InImage:GetValue(req):Copy()

    if num_frames == 1 and mod_frames == 1 then
        OutImage:Set(req, img)
    else
        img:Fill(Pixel({R = 0.0, G = 0.0, B = 0.0, A = 1.0}))
        local gain = 1.0 / num_frames
        for i = 0, num_frames-1 do
            local thisFrame = InImage:GetSource(mod_frames * math.floor(req.Time / mod_frames) + i)
            img = img:ChannelOpOf("Add", thisFrame, {R = "fg.R", G = "fg.G", B = "fg.B", A = nil})
        end
        img:Gain(gain, gain, gain, 1.0)
        OutImage:Set(req, img)
    end
end
